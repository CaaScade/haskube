"/api/v1/nodes": {
    "get": {
     "description": "list or watch objects of kind Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf",
      "application/json;stream=watch",
      "application/vnd.kubernetes.protobuf;stream=watch"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "core_v1"
     ],
     "operationId": "listCoreV1Node",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.NodeList"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "list",
     "x-kubernetes-group-version-kind": {
      "group": "",
      "version": "v1",
      "kind": "Node"
     }
    },
    "post": {
     "description": "create a Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "core_v1"
     ],
     "operationId": "createCoreV1Node",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Node"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Node"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "post",
     "x-kubernetes-group-version-kind": {
      "group": "",
      "version": "v1",
      "kind": "Node"
     }
    },
    "delete": {
     "description": "delete collection of Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "core_v1"
     ],
     "operationId": "deleteCoreV1CollectionNode",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their fields. Defaults to everything.",
       "name": "fieldSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "If true, partially initialized resources are included in the response.",
       "name": "includeUninitialized",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
       "name": "labelSelector",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "When specified with a watch call, shows changes that occur after that particular version of a resource. Defaults to changes from the beginning of history. When specified for list: - if unset, then the result is returned from remote storage based on quorum-read flag; - if it's 0, then we simply return what we currently have in cache, no guarantee; - if set to non zero, then the result is at least as fresh as given rv.",
       "name": "resourceVersion",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "Timeout for the list/watch call.",
       "name": "timeoutSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Watch for changes to the described resources and return them as a stream of add, update, and remove notifications. Specify resourceVersion.",
       "name": "watch",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "deletecollection",
     "x-kubernetes-group-version-kind": {
      "group": "",
      "version": "v1",
      "kind": "Node"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
   "/api/v1/nodes/{name}": {
    "get": {
     "description": "read the specified Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "core_v1"
     ],
     "operationId": "readCoreV1Node",
     "parameters": [
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should the export be exact.  Exact export maintains cluster-specific fields like 'Namespace'.",
       "name": "exact",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Should this value be exported.  Export strips fields that a user can not specify.",
       "name": "export",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Node"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "get",
     "x-kubernetes-group-version-kind": {
      "group": "",
      "version": "v1",
      "kind": "Node"
     }
    },
    "put": {
     "description": "replace the specified Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "core_v1"
     ],
     "operationId": "replaceCoreV1Node",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Node"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Node"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "put",
     "x-kubernetes-group-version-kind": {
      "group": "",
      "version": "v1",
      "kind": "Node"
     }
    },
    "delete": {
     "description": "delete a Node",
     "consumes": [
      "*/*"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "core_v1"
     ],
     "operationId": "deleteCoreV1Node",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.DeleteOptions"
       }
      },
      {
       "uniqueItems": true,
       "type": "integer",
       "description": "The duration in seconds before the object should be deleted. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period for the specified type will be used. Defaults to a per object value if not specified. zero means delete immediately.",
       "name": "gracePeriodSeconds",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "boolean",
       "description": "Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should the dependent objects be orphaned. If true/false, the \"orphan\" finalizer will be added to/removed from the object's finalizers list. Either this field or PropagationPolicy may be set, but not both.",
       "name": "orphanDependents",
       "in": "query"
      },
      {
       "uniqueItems": true,
       "type": "string",
       "description": "Whether and how garbage collection will be performed. Either this field or OrphanDependents may be set, but not both. The default policy is decided by the existing finalizer set in the metadata.finalizers and the resource-specific default policy.",
       "name": "propagationPolicy",
       "in": "query"
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Status"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "delete",
     "x-kubernetes-group-version-kind": {
      "group": "",
      "version": "v1",
      "kind": "Node"
     }
    },
    "patch": {
     "description": "partially update the specified Node",
     "consumes": [
      "application/json-patch+json",
      "application/merge-patch+json",
      "application/strategic-merge-patch+json"
     ],
     "produces": [
      "application/json",
      "application/yaml",
      "application/vnd.kubernetes.protobuf"
     ],
     "schemes": [
      "https"
     ],
     "tags": [
      "core_v1"
     ],
     "operationId": "patchCoreV1Node",
     "parameters": [
      {
       "name": "body",
       "in": "body",
       "required": true,
       "schema": {
        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.Patch"
       }
      }
     ],
     "responses": {
      "200": {
       "description": "OK",
       "schema": {
        "$ref": "#/definitions/io.k8s.kubernetes.pkg.api.v1.Node"
       }
      },
      "401": {
       "description": "Unauthorized"
      }
     },
     "x-kubernetes-action": "patch",
     "x-kubernetes-group-version-kind": {
      "group": "",
      "version": "v1",
      "kind": "Node"
     }
    },
    "parameters": [
     {
      "uniqueItems": true,
      "type": "string",
      "description": "name of the Node",
      "name": "name",
      "in": "path",
      "required": true
     },
     {
      "uniqueItems": true,
      "type": "string",
      "description": "If 'true', then the output is pretty printed.",
      "name": "pretty",
      "in": "query"
     }
    ]
   },
[ "/apis/apps/v1beta1/watch/namespaces/{namespace}/deployments/{name}"
, "/apis/extensions/v1beta1/watch/namespaces/{namespace}/replicasets"
, "/apis/autoscaling/v2alpha1/watch/namespaces/{namespace}/horizontalpodautoscalers"
, "/apis/batch/v2alpha1/namespaces/{namespace}/scheduledjobs/{name}/status"
, "/apis/batch/v2alpha1/namespaces/{namespace}/cronjobs/{name}"
, "/apis/settings.k8s.io/v1alpha1/podpresets"
, "/apis/rbac.authorization.k8s.io/v1alpha1/watch/clusterrolebindings"
, "/api/v1/namespaces/{namespace}/replicationcontrollers/{name}"
, "/api/v1/watch/nodes"
, "/api/v1/secrets"
, "/apis/admissionregistration.k8s.io/v1alpha1/initializerconfigurations/{name}"
, "/apis/authorization.k8s.io/v1beta1/namespaces/{namespace}/localsubjectaccessreviews"
, "/apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}/status"
, "/apis/batch/v2alpha1/namespaces/{namespace}/scheduledjobs/{name}"
, "/apis/extensions/v1beta1/ingresses"
, "/api/v1/namespaces/{namespace}/pods/{name}/portforward"
, "/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies/{name}"
, "/apis/batch/v2alpha1/"
, "/logs/"
, "/apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets/{name}/status"
, "/api/v1/resourcequotas"
, "/apis/admissionregistration.k8s.io/"
, "/apis/authentication.k8s.io/v1/"
, "/apis/autoscaling/v2alpha1/namespaces/{namespace}/horizontalpodautoscalers/{name}"
, "/apis/policy/v1beta1/watch/namespaces/{namespace}/poddisruptionbudgets/{name}"
, "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}/status"
, "/apis/extensions/v1beta1/watch/namespaces/{namespace}/daemonsets"
, "/api/"
, "/api/v1/namespaces/{namespace}/pods/{name}/binding"
, "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/scale"
, "/apis/apps/v1beta1/deployments"
, "/apis/apiregistration.k8s.io/v1beta1/"
, "/apis/batch/v1/"
, "/apis/apps/v1beta1/watch/controllerrevisions"
, "/apis/rbac.authorization.k8s.io/v1alpha1/rolebindings"
, "/apis/settings.k8s.io/v1alpha1/watch/namespaces/{namespace}/podpresets/{name}"
, "/api/v1/endpoints"
, "/api/v1/namespaces/{namespace}/pods/{name}/status"
, "/apis/batch/v2alpha1/watch/namespaces/{namespace}/scheduledjobs/{name}"
, "/api/v1/watch/namespaces/{namespace}/persistentvolumeclaims"
, "/api/v1/namespaces/{namespace}/events/{name}"
, "/apis/apps/v1beta1/watch/namespaces/{namespace}/statefulsets/{name}"
, "/apis/networking.k8s.io/v1/namespaces/{namespace}/networkpolicies"
, "/apis/autoscaling/v1/horizontalpodautoscalers"
, "/apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}"
, "/api/v1/services"
, "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}"
, "/apis/extensions/v1beta1/watch/thirdpartyresources/{name}"
, "/apis/autoscaling/"
, "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/status"
, "/api/v1/namespaces/{namespace}/configmaps/{name}"
, "/api/v1/namespaces/{namespace}/resourcequotas/{name}/status"
, "/api/v1/watch/secrets"
, "/apis/authentication.k8s.io/v1beta1/"
, "/apis/apps/v1beta1/watch/namespaces/{namespace}/controllerrevisions"
, "/api/v1/watch/namespaces/{namespace}/secrets/{name}"
, "/apis/rbac.authorization.k8s.io/v1alpha1/watch/namespaces/{namespace}/rolebindings"
, "/api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}"
, "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status"
, "/api/v1/watch/resourcequotas"
, "/api/v1/watch/namespaces/{namespace}/replicationcontrollers"
, "/apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}"
, "/apis/authorization.k8s.io/v1beta1/"
, "/apis/rbac.authorization.k8s.io/"
, "/api/v1/namespaces/{name}/finalize"
, "/apis/apps/v1beta1/statefulsets"
, "/api/v1/watch/nodes/{name}"
, "/apis/rbac.authorization.k8s.io/v1beta1/clusterroles"
, "/apis/batch/v2alpha1/watch/namespaces/{namespace}/cronjobs"
, "/apis/batch/v2alpha1/watch/scheduledjobs"
, "/api/v1/watch/namespaces/{namespace}/endpoints/{name}"
, "/apis/admissionregistration.k8s.io/v1alpha1/externaladmissionhookconfigurations"
, "/apis/apiregistration.k8s.io/v1beta1/apiservices"
, "/apis/autoscaling/v1/watch/namespaces/{namespace}/horizontalpodautoscalers"
, "/api/v1/namespaces/{namespace}/pods/{name}/eviction"
, "/api/v1/namespaces/{namespace}/persistentvolumeclaims"
, "/apis/rbac.authorization.k8s.io/v1beta1/"
, "/apis/settings.k8s.io/v1alpha1/namespaces/{namespace}/podpresets"
, "/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles/{name}"
, "/apis/policy/v1beta1/watch/poddisruptionbudgets"
, "/api/v1/watch/namespaces/{namespace}/limitranges"
, "/apis/batch/v2alpha1/namespaces/{namespace}/cronjobs/{name}/status"
, "/api/v1/proxy/namespaces/{namespace}/pods/{name}"
, "/api/v1/namespaces/{namespace}/serviceaccounts"
, "/api/v1/namespaces/{namespace}/pods/{name}/exec"
, "/apis/authorization.k8s.io/v1beta1/subjectaccessreviews"
, "/apis/extensions/v1beta1/replicasets"
, "/api/v1/watch/namespaces/{namespace}/events/{name}"
, "/apis/batch/v1/namespaces/{namespace}/jobs/{name}"
, "/api/v1/namespaces/{namespace}/services"
, "/apis/extensions/"
, "/apis/storage.k8s.io/v1/storageclasses/{name}"
, "/api/v1/configmaps"
, "/apis/rbac.authorization.k8s.io/v1alpha1/clusterrolebindings/{name}"
, "/apis/storage.k8s.io/v1beta1/"
, "/api/v1/events"
, "/api/v1/namespaces/{namespace}/pods/{name}/proxy/{path}"
, "/apis/batch/v1/namespaces/{namespace}/jobs"
, "/api/v1/nodes/{name}"
, "/api/v1/componentstatuses/{name}"
, "/apis/policy/"
, "/api/v1/namespaces/{name}/status"
, "/api/v1/watch/namespaces/{namespace}/persistentvolumeclaims/{name}"
, "/apis/authorization.k8s.io/v1/"
, "/apis/admissionregistration.k8s.io/v1alpha1/initializerconfigurations"
, "/api/v1/watch/replicationcontrollers"
, "/api/v1/namespaces/{namespace}/secrets/{name}"
, "/apis/rbac.authorization.k8s.io/v1beta1/watch/clusterrolebindings"
, "/api/v1/namespaces/{namespace}/replicationcontrollers"
, "/apis/batch/v2alpha1/scheduledjobs"
, "/api/v1/proxy/nodes/{name}/{path}"
, "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}"
, "/apis/batch/v1/jobs"
, "/apis/apps/v1beta1/watch/namespaces/{namespace}/deployments"
, "/apis/apps/"
, "/apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}/approval"
, "/api/v1/watch/namespaces/{namespace}/services/{name}"
, "/api/v1/watch/persistentvolumes"
, "/api/v1/watch/namespaces/{namespace}/endpoints"
, "/apis/extensions/v1beta1/networkpolicies"
, "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/scale"
, "/api/v1/watch/namespaces/{namespace}/serviceaccounts"
, "/api/v1/watch/namespaces/{namespace}/replicationcontrollers/{name}"
, "/apis/apps/v1beta1/watch/namespaces/{namespace}/controllerrevisions/{name}"
, "/apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/roles"
, "/apis/batch/v2alpha1/watch/namespaces/{namespace}/cronjobs/{name}"
, "/apis/settings.k8s.io/v1alpha1/watch/namespaces/{namespace}/podpresets"
, "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses"
, "/api/v1/componentstatuses"
, "/apis/authorization.k8s.io/v1beta1/selfsubjectaccessreviews"
, "/apis/rbac.authorization.k8s.io/v1beta1/clusterroles/{name}"
, "/apis/policy/v1beta1/watch/namespaces/{namespace}/poddisruptionbudgets"
, "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets"
, "/apis/rbac.authorization.k8s.io/v1alpha1/watch/clusterroles"
, "/api/v1/persistentvolumes/{name}"
, "/api/v1/nodes"
, "/apis/certificates.k8s.io/"
, "/apis/extensions/v1beta1/podsecuritypolicies"
, "/apis/rbac.authorization.k8s.io/v1alpha1/watch/namespaces/{namespace}/rolebindings/{name}"
, "/apis/authorization.k8s.io/v1/subjectaccessreviews"
, "/api/v1/watch/namespaces/{namespace}/services"
, "/apis/apiregistration.k8s.io/"
, "/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies/{name}"
, "/api/v1/namespaces/{namespace}/limitranges"
, "/api/v1/namespaces/{namespace}/endpoints/{name}"
, "/api/v1/"
, "/api/v1/namespaces/{namespace}/pods/{name}/attach"
, "/apis/networking.k8s.io/"
, "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}/rollback"
, "/api/v1/watch/configmaps"
, "/apis/extensions/v1beta1/watch/deployments"
, "/apis/apiregistration.k8s.io/v1beta1/apiservices/{name}"
, "/apis/networking.k8s.io/v1/"
, "/apis/rbac.authorization.k8s.io/v1alpha1/clusterroles/{name}"
, "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets"
, "/api/v1/replicationcontrollers"
, "/apis/extensions/v1beta1/watch/daemonsets"
, "/apis/admissionregistration.k8s.io/v1alpha1/externaladmissionhookconfigurations/{name}"
, "/apis/settings.k8s.io/v1alpha1/namespaces/{namespace}/podpresets/{name}"
, "/api/v1/namespaces/{name}"
, "/apis/batch/v2alpha1/watch/namespaces/{namespace}/scheduledjobs"
, "/apis/rbac.authorization.k8s.io/v1alpha1/watch/roles"
, "/apis/autoscaling/v1/"
, "/api/v1/watch/events"
, "/apis/settings.k8s.io/"
, "/apis/batch/v1/watch/namespaces/{namespace}/jobs"
, "/apis/apps/v1beta1/watch/namespaces/{namespace}/statefulsets"
, "/apis/extensions/v1beta1/namespaces/{namespace}/ingresses/{name}/status"
, "/api/v1/namespaces/{namespace}/configmaps"
, "/apis/extensions/v1beta1/watch/namespaces/{namespace}/replicasets/{name}"
, "/apis/rbac.authorization.k8s.io/v1alpha1/watch/namespaces/{namespace}/roles"
, "/api/v1/watch/namespaces/{namespace}/limitranges/{name}"
, "/api/v1/namespaces/{namespace}/services/{name}"
, "/apis/certificates.k8s.io/v1beta1/certificatesigningrequests"
, "/apis/batch/v1/watch/jobs"
, "/api/v1/limitranges"
, "/apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies"
, "/api/v1/namespaces/{namespace}/replicationcontrollers/{name}/status"
, "/apis/rbac.authorization.k8s.io/v1beta1/watch/clusterrolebindings/{name}"
, "/api/v1/namespaces"
, "/apis/apps/v1beta1/namespaces/{namespace}/controllerrevisions/{name}"
, "/apis/batch/v1/namespaces/{namespace}/jobs/{name}/status"
, "/apis/batch/"
, "/apis/extensions/v1beta1/watch/namespaces/{namespace}/daemonsets/{name}"
, "/apis/authentication.k8s.io/"
, "/apis/rbac.authorization.k8s.io/v1alpha1/clusterroles"
, "/api/v1/watch/persistentvolumeclaims"
, "/apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/rolebindings"
, "/apis/extensions/v1beta1/watch/namespaces/{namespace}/networkpolicies/{name}"
, "/apis/rbac.authorization.k8s.io/v1beta1/roles"
, "/api/v1/watch/namespaces/{namespace}/secrets"
, "/apis/authorization.k8s.io/v1/selfsubjectaccessreviews"
, "/apis/storage.k8s.io/v1beta1/storageclasses"
, "/api/v1/watch/namespaces/{namespace}/podtemplates"
, "/api/v1/watch/persistentvolumes/{name}"
, "/apis/rbac.authorization.k8s.io/v1beta1/watch/clusterroles/{name}"
, "/api/v1/watch/serviceaccounts"
, "/api/v1/proxy/namespaces/{namespace}/services/{name}"
, "/api/v1/watch/namespaces/{namespace}/resourcequotas/{name}"
, "/api/v1/podtemplates"
, "/apis/rbac.authorization.k8s.io/v1beta1/watch/clusterroles"
, "/api/v1/namespaces/{namespace}/services/{name}/status"
, "/apis/authentication.k8s.io/v1beta1/tokenreviews"
, "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}"
, "/apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments"
, "/api/v1/watch/namespaces/{namespace}/events"
, "/apis/apiregistration.k8s.io/v1beta1/watch/apiservices/{name}"
, "/apis/apps/v1beta1/watch/statefulsets"
, "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}"
, "/apis/extensions/v1beta1/daemonsets"
, "/apis/apiregistration.k8s.io/v1beta1/apiservices/{name}/status"
, "/api/v1/namespaces/{namespace}/limitranges/{name}"
, "/apis/rbac.authorization.k8s.io/v1alpha1/watch/clusterroles/{name}"
, "/api/v1/watch/namespaces/{name}"
, "/apis/batch/v2alpha1/namespaces/{namespace}/cronjobs"
, "/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/roles"
, "/api/v1/watch/namespaces/{namespace}/configmaps"
, "/apis/admissionregistration.k8s.io/v1alpha1/"
, "/apis/settings.k8s.io/v1alpha1/watch/podpresets"
, "/apis/rbac.authorization.k8s.io/v1beta1/watch/roles"
, "/apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers"
, "/api/v1/watch/namespaces"
, "/apis/autoscaling/v2alpha1/horizontalpodautoscalers"
, "/api/v1/namespaces/{namespace}/pods/{name}/log"
, "/apis/storage.k8s.io/"
, "/api/v1/namespaces/{namespace}/secrets"
, "/api/v1/namespaces/{namespace}/podtemplates"
, "/api/v1/namespaces/{namespace}/services/{name}/proxy"
, "/api/v1/namespaces/{namespace}/pods/{name}/proxy"
, "/api/v1/pods"
, "/api/v1/watch/limitranges"
, "/apis/storage.k8s.io/v1/storageclasses"
, "/api/v1/persistentvolumeclaims"
, "/api/v1/proxy/nodes/{name}"
, "/apis/batch/v1/watch/namespaces/{namespace}/jobs/{name}"
, "/api/v1/persistentvolumes/{name}/status"
, "/apis/rbac.authorization.k8s.io/v1alpha1/watch/namespaces/{namespace}/roles/{name}"
, "/apis/networking.k8s.io/v1/networkpolicies"
, "/api/v1/serviceaccounts"
, "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}"
, "/apis/apps/v1beta1/controllerrevisions"
, "/apis/networking.k8s.io/v1/watch/namespaces/{namespace}/networkpolicies/{name}"
, "/api/v1/namespaces/{namespace}/serviceaccounts/{name}"
, "/api/v1/persistentvolumes"
, "/api/v1/namespaces/{namespace}/endpoints"
, "/apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/rolebindings/{name}"
, "/apis/storage.k8s.io/v1beta1/storageclasses/{name}"
, "/apis/extensions/v1beta1/watch/podsecuritypolicies/{name}"
, "/apis/rbac.authorization.k8s.io/v1alpha1/"
, "/apis/settings.k8s.io/v1alpha1/"
, "/apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings"
, "/apis/authentication.k8s.io/v1/tokenreviews"
, "/apis/admissionregistration.k8s.io/v1alpha1/watch/initializerconfigurations"
, "/apis/extensions/v1beta1/namespaces/{namespace}/networkpolicies"
, "/apis/"
, "/apis/autoscaling/v2alpha1/"
, "/apis/storage.k8s.io/v1/"
, "/apis/apps/v1beta1/namespaces/{namespace}/deployments"
, "/api/v1/proxy/namespaces/{namespace}/services/{name}/{path}"
, "/api/v1/namespaces/{namespace}/resourcequotas"
, "/apis/autoscaling/v2alpha1/watch/namespaces/{namespace}/horizontalpodautoscalers/{name}"
, "/apis/rbac.authorization.k8s.io/v1beta1/watch/namespaces/{namespace}/roles/{name}"
, "/apis/apps/v1beta1/watch/deployments"
, "/apis/apps/v1beta1/namespaces/{namespace}/statefulsets/{name}"
, "/apis/certificates.k8s.io/v1beta1/watch/certificatesigningrequests/{name}"
, "/apis/extensions/v1beta1/watch/namespaces/{namespace}/ingresses"
, "/api/v1/nodes/{name}/proxy"
, "/apis/extensions/v1beta1/watch/podsecuritypolicies"
, "/apis/extensions/v1beta1/thirdpartyresources/{name}"
, "/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings/{name}"
, "/api/v1/watch/namespaces/{namespace}/configmaps/{name}"
, "/apis/networking.k8s.io/v1/watch/networkpolicies"
, "/apis/rbac.authorization.k8s.io/v1beta1/watch/rolebindings"
, "/api/v1/namespaces/{namespace}/pods"
, "/api/v1/watch/pods"
, "/apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets"
, "/api/v1/watch/services"
, "/apis/authorization.k8s.io/"
, "/apis/extensions/v1beta1/watch/namespaces/{namespace}/deployments/{name}"
, "/apis/rbac.authorization.k8s.io/v1beta1/watch/namespaces/{namespace}/roles"
, "/apis/autoscaling/v2alpha1/watch/horizontalpodautoscalers"
, "/apis/autoscaling/v1/watch/horizontalpodautoscalers"
, "/apis/storage.k8s.io/v1/watch/storageclasses"
, "/version/"
, "/apis/extensions/v1beta1/deployments"
, "/apis/admissionregistration.k8s.io/v1alpha1/watch/externaladmissionhookconfigurations/{name}"
, "/apis/rbac.authorization.k8s.io/v1beta1/namespaces/{namespace}/roles/{name}"
, "/api/v1/watch/namespaces/{namespace}/serviceaccounts/{name}"
, "/apis/rbac.authorization.k8s.io/v1alpha1/namespaces/{namespace}/rolebindings"
, "/apis/certificates.k8s.io/v1beta1/"
, "/apis/extensions/v1beta1/watch/namespaces/{namespace}/networkpolicies"
, "/api/v1/watch/namespaces/{namespace}/resourcequotas"
, "/apis/certificates.k8s.io/v1beta1/watch/certificatesigningrequests"
, "/apis/storage.k8s.io/v1beta1/watch/storageclasses/{name}"
, "/api/v1/namespaces/{namespace}/services/{name}/proxy/{path}"
, "/apis/batch/v2alpha1/namespaces/{namespace}/scheduledjobs"
, "/apis/extensions/v1beta1/thirdpartyresources"
, "/apis/apps/v1beta1/namespaces/{namespace}/controllerrevisions"
, "/api/v1/watch/namespaces/{namespace}/pods/{name}"
, "/api/v1/namespaces/{namespace}/podtemplates/{name}"
, "/apis/rbac.authorization.k8s.io/v1alpha1/roles"
, "/apis/extensions/v1beta1/podsecuritypolicies/{name}"
, "/apis/batch/v2alpha1/cronjobs"
, "/apis/apps/v1beta1/namespaces/{namespace}/statefulsets"
, "/apis/rbac.authorization.k8s.io/v1beta1/watch/namespaces/{namespace}/rolebindings/{name}"
, "/apis/rbac.authorization.k8s.io/v1beta1/clusterrolebindings/{name}"
, "/apis/admissionregistration.k8s.io/v1alpha1/watch/externaladmissionhookconfigurations"
, "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/scale"
, "/apis/storage.k8s.io/v1beta1/watch/storageclasses"
, "/apis/policy/v1beta1/poddisruptionbudgets"
, "/api/v1/watch/namespaces/{namespace}/pods"
, "/apis/authorization.k8s.io/v1/namespaces/{namespace}/localsubjectaccessreviews"
, "/apis/autoscaling/v2alpha1/namespaces/{namespace}/horizontalpodautoscalers"
, "/apis/apiregistration.k8s.io/v1beta1/watch/apiservices"
, "/apis/extensions/v1beta1/"
, "/apis/extensions/v1beta1/watch/replicasets"
, "/apis/admissionregistration.k8s.io/v1alpha1/watch/initializerconfigurations/{name}"
, "/api/v1/namespaces/{namespace}/resourcequotas/{name}"
, "/apis/extensions/v1beta1/watch/ingresses"
, "/apis/policy/v1beta1/"
, "/apis/extensions/v1beta1/namespaces/{namespace}/daemonsets/{name}/status"
, "/api/v1/namespaces/{namespace}/bindings"
, "/api/v1/watch/podtemplates"
, "/apis/rbac.authorization.k8s.io/v1beta1/rolebindings"
, "/apis/certificates.k8s.io/v1beta1/certificatesigningrequests/{name}/status"
, "/apis/apps/v1beta1/"
, "/apis/apps/v1beta1/namespaces/{namespace}/deployments/{name}"
, "/apis/rbac.authorization.k8s.io/v1alpha1/clusterrolebindings"
, "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/status"
, "/apis/rbac.authorization.k8s.io/v1beta1/watch/namespaces/{namespace}/rolebindings"
, "/apis/extensions/v1beta1/namespaces/{namespace}/deployments/{name}/rollback"
, "/apis/rbac.authorization.k8s.io/v1alpha1/watch/clusterrolebindings/{name}"
, "/apis/extensions/v1beta1/watch/namespaces/{namespace}/ingresses/{name}"
, "/apis/batch/v2alpha1/watch/cronjobs"
, "/api/v1/namespaces/{namespace}/replicationcontrollers/{name}/scale"
, "/apis/rbac.authorization.k8s.io/v1alpha1/watch/rolebindings"
, "/apis/storage.k8s.io/v1/watch/storageclasses/{name}"
, "/api/v1/namespaces/{namespace}/pods/{name}"
, "/api/v1/namespaces/{namespace}/events"
, "/api/v1/proxy/namespaces/{namespace}/pods/{name}/{path}"
, "/api/v1/watch/namespaces/{namespace}/podtemplates/{name}"
, "/apis/extensions/v1beta1/watch/networkpolicies"
, "/apis/autoscaling/v2alpha1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status"
, "/apis/extensions/v1beta1/namespaces/{namespace}/replicasets/{name}/status"
, "/api/v1/nodes/{name}/proxy/{path}"
, "/apis/policy/v1beta1/namespaces/{namespace}/poddisruptionbudgets/{name}"
, "/api/v1/nodes/{name}/status"
, "/apis/extensions/v1beta1/namespaces/{namespace}/replicationcontrollers/{name}/scale"
, "/apis/extensions/v1beta1/namespaces/{namespace}/deployments"
, "/logs/{logpath}"
, "/apis/extensions/v1beta1/watch/thirdpartyresources"
, "/api/v1/watch/endpoints"
]
